# Application Information
spring.application.name=quiz-attempt-service

# Server Configuration
server.port=8083

# Spring Data JPA Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/quiz_attempt_db
spring.datasource.username=root
spring.datasource.password=Ameer@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.generate-ddl=true

# HikariCP Connection Pool Configuration (optional, defaults should work)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# Logging Configuration for SLF4J
logging.level.org.springframework.web=INFO
logging.level.com.example.quizattemptservice=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Swagger API Configuration (if using Swagger)
swagger.api.title=Quiz Attempt Service API
swagger.api.description=API for managing quiz attempts, question attempts, and quiz results.
swagger.api.version=1.0

# Security Configuration (if you add OAuth, JWT or other security)
# OAuth 2.0 settings or other security settings should be added here if required
# spring.security.oauth2.client.registration.* (if applicable)
# spring.security.oauth2.resourceserver.jwt.* (if applicable)

# Gson Configuration for JSON Conversion (optional for Gson if used)
# spring.gson.date-format=yyyy-MM-dd HH:mm:ss
# spring.gson.pretty-print=true

# DevTools Configuration (optional)
spring.devtools.restart.enabled=true
# Enables automatic restart of the application during development

# Custom Application Properties (if needed)
app.custom.property=value
